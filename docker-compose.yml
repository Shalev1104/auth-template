version: "3.8"

services:
  postgres_db:
    container_name: sheldon_postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_CLIENT=${POSTGRES_CLIENT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - shared-network
    volumes:
      - sheldon-pg-data:/var/lib/postgresql/data

  mongo_db:
    container_name: sheldon_mongo
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - sheldon-mongo-data:/data/db

  redis:
    container_name: sheldon_redis
    image: redis
    command: redis-server --requirepass ${REDIS_PASS}
    networks:
      - shared-network
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis-data:/data

  api:
    container_name: sheldon_api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
      target: development
    env_file:
      - ./api/.env
    ports:
      - 3000:3000
    networks:
      - shared-network
    volumes:
      - ./api/src:/usr/src/api/src
    depends_on:
      - postgres_db
      - mongo_db
      - redis

  web:
    container_name: sheldon_web
    restart: unless-stopped
    stdin_open: true
    tty: true
    build:
      context: ./front
      dockerfile: Dockerfile
      target: development
    env_file:
      - ./front/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./front:/usr/src/front
    ports:
      - 8080:8081
    networks:
      - shared-network
    depends_on:
      - api
volumes:
  sheldon-pg-data:
    external: true
  sheldon-mongo-data: {}
  redis-data:
    driver: local

networks:
  shared-network: {}
